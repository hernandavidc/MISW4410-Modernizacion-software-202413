name: ci
on:
  push:
    tags:
      - '*'
    branches: 
      - 'feature**'
jobs:
  pruebas_feature:
    if: ${{ contains(github.event.head_commit.message, 'MERGE') }}
    name: Pruebas en rama feature
    runs-on: ubuntu-latest
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2
    - name: Configuración de entorno de python
      uses: actions/setup-python@v2
      with:
          python-version: '3.7'
    - name: Instalación de librerías y dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Correr pruebas
      id: correr-pruebas
      run: python -m unittest discover -s tests -v
    - name: Cálculo de cubrimiento
      id: cubrimiento
      run: |
          coverage run -m unittest discover -s tests -v
          coverage report -m
  automerge_develop:
    name: Fusionar con develop
    needs: pruebas_feature
    runs-on: ubuntu-latest
    steps:
      - name: Fusión feature con develop
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: ${{ github.ref }}
          target-branch: develop
  autorelease:
    name: Crear release y fusionar con main
    needs: automerge_develop
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Obtener último tag
        id: get_latest_tag
        run: echo ::set-output name=tag::$(git describe --abbrev=0 --tags)
      - name: Crear nombre release
        id: build_relase_name
        env:
          TAG_REF: ${{ steps.get_latest_tag.outputs.tag }}
        run: echo ::set-output name=release::release/${TAG_REF}
      - name: Crear release
        env:
          NAME_REF: ${{ steps.build_relase_name.outputs.release }}
        run: |
            git checkout -b ${NAME_REF}
            git push -f -u origin ${NAME_REF}
      - name: Fusionar release en main
        uses: tukasz/direct-merge-action@master
        env:
          NAME_REF: ${{ steps.build_relase_name.outputs.release }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: ${{env.NAME_REF}}
          target-branch: main
